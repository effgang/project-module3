plugins {
    id 'java'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.14'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation "org.mapstruct:mapstruct:1.5.5.Final"
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.16.1'

    compileOnly 'org.projectlombok:lombok:1.18.30'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.10.0'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}


jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Main-Class': 'com.efanov.Main',
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}





